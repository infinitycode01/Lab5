@page "/tariffs"
@using Lab5.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Tariffs</PageTitle>

<h3>Tariffs</h3>

<button class="btn btn-primary mb-3" @onclick="CreateTariff">Add New Tariff</button>

<table class="table table-striped mt-4">
    <thead>
        <tr>
            <th>Tariff ID</th>
            <th>City</th>
            <th>Rate per Minute</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tariff in tariffs)
        {
            <tr>
                <td>@tariff.TariffId</td>
                <td>@tariff.City.CityName</td>
                <td>@tariff.RatePerMinute</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditTariff(tariff.TariffId)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => ConfirmDeleteTariff(tariff.TariffId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (showConfirmDelete)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="close" @onclick="CancelDelete" style="border: none; background: none; font-size: 1.5rem; color: #dc3545;">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this tariff?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="DeleteTariffConfirmed">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Tariff> tariffs = new List<Tariff>();
    private int tariffIdToDelete;
    private bool showConfirmDelete = false;

    protected override async Task OnInitializedAsync()
    {
        tariffs = await DbContext.Tariffs.Include(t => t.City).ToListAsync();
    }

    private void CreateTariff()
    {
        NavigationManager.NavigateTo("/tariffs/create");
    }

    private void EditTariff(int id)
    {
        NavigationManager.NavigateTo($"/tariffs/edit/{id}");
    }

    private void ConfirmDeleteTariff(int id)
    {
        tariffIdToDelete = id;
        showConfirmDelete = true;
    }

    private void CancelDelete()
    {
        showConfirmDelete = false;
    }

    private async Task DeleteTariffConfirmed()
    {
        var tariff = await DbContext.Tariffs.FindAsync(tariffIdToDelete);
        if (tariff != null)
        {
            DbContext.Tariffs.Remove(tariff);
            await DbContext.SaveChangesAsync();
            tariffs = await DbContext.Tariffs.Include(t => t.City).ToListAsync();
        }
        showConfirmDelete = false;
    }
}

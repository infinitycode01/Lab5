@page "/subscribers/edit/{subscriberId:int}"
@using Lab5.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Edit Subscriber</PageTitle>

<h3>Edit Subscriber</h3>

<EditForm Model="@subscriber" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" class="form-control" @bind-Value="subscriber.FirstName" />
    </div>

    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" class="form-control" @bind-Value="subscriber.LastName" />
    </div>

    <div class="form-group">
        <label for="MiddleName">Middle Name</label>
        <InputText id="MiddleName" class="form-control" @bind-Value="subscriber.MiddleName" />
    </div>

    <div class="form-group">
        <label for="Address">Address</label>
        <InputText id="Address" class="form-control" @bind-Value="subscriber.Address" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Subscriber subscriber = new Subscriber();

    [Parameter] public int subscriberId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        subscriber = await DbContext.Subscribers.FindAsync(subscriberId);
        if (subscriber == null)
        {
            NavigationManager.NavigateTo("/subscribers");
        }
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Subscribers.Update(subscriber);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/subscribers");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/subscribers");
    }
}
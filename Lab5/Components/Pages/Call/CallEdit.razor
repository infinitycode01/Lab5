@page "/calls/edit/{callId:int}"
@using Lab5.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Edit Call</PageTitle>

<h3>Edit Call</h3>

<EditForm Model="@call" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="PhoneId">Phone ID</label>
        <InputNumber id="PhoneId" class="form-control" @bind-Value="call.PhoneId" />
    </div>

    <div class="form-group">
        <label for="CityId">City ID</label>
        <InputNumber id="CityId" class="form-control" @bind-Value="call.CityId" />
    </div>

    <div class="form-group">
        <label for="CallDate">Call Date</label>
        <InputDate id="CallDate" class="form-control" @bind-Value="call.CallDate" />
    </div>

    <div class="form-group">
        <label for="CallDuration">Call Duration (in minutes)</label>
        <InputNumber id="CallDuration" class="form-control" @bind-Value="call.CallDuration" />
    </div>

    <div class="form-group">
        <label for="TariffId">Tariff ID</label>
        <InputNumber id="TariffId" class="form-control" @bind-Value="call.TariffId" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Call call = new Call();

    [Parameter] public int callId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        call = await DbContext.Calls.FindAsync(callId);
        if (call == null)
        {
            NavigationManager.NavigateTo("/calls");
        }
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Calls.Update(call);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/calls");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/calls");
    }
}